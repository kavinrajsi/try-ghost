# render.yaml
databases:
  - name: app-postgres
    databaseName: appdb
    plan: free                 # free | starter | standard | pro
    user: app
    ipAllowList: []            # add CIDRs to allow direct connections if needed
    # Render will expose env var: DATABASE_URL

redis:
  - name: app-redis
    plan: free                 # free | starter | standard
    # Render will expose env var: REDIS_URL

services:
  # --- Web service ---
  - type: web
    name: app-web
    env: node                  # or "python", "ruby", "go", "docker"
    runtime: node
    repo: .
    branch: main
    buildCommand: npm ci && npm run build
    startCommand: npm run start
    autoDeploy: true
    plan: starter
    healthCheckPath: /healthz
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: "10000"         # Render sets PORT; many frameworks read it automatically
      - key: DATABASE_URL
        fromDatabase:
          name: app-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: app-redis
          type: redis
          property: connectionString
      # - key: APP_SECRET
      #   sync: false           # set value in dashboard

  # --- Background worker (queue consumers, schedulers, etc.) ---
  - type: worker
    name: app-worker
    env: node
    runtime: node
    repo: .
    branch: main
    buildCommand: npm ci && npm run build
    startCommand: node worker.js
    autoDeploy: true
    plan: starter
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: app-postgres
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: app-redis
          type: redis
          property: connectionString

  # --- Cron job (Render “cron” type runs on a schedule) ---
  - type: cron
    name: app-cron-nightly
    env: node
    runtime: node
    repo: .
    branch: main
    buildCommand: npm ci && npm run build
    startCommand: node scripts/nightly.js
    schedule: "0 0 * * *"     # every day at 00:00 UTC (CRON format)
    envVars:
      - key: NODE_ENV
        value: production
      - key: DATABASE_URL
        fromDatabase:
          name: app-postgres
          property: connectionString

  # --- Static site (optional) ---
  - type: static
    name: app-static
    repo: .
    branch: main
    buildCommand: npm ci && npm run build:static
    staticPublishPath: dist
    pullRequestPreviewsEnabled: true
    headers:
      - path: /*
        name: Cache-Control
        value: public, max-age=3600
    routes:
      - type: rewrite
        source: /api/*
        destination: https://app-web.onrender.com/api/:splat
